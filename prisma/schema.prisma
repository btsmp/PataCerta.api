// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String            @id @unique @default(uuid())
  profilePictureUrl String?
  name              String
  password          String
  email             String            @unique
  cpf               String?           @unique
  isValidated       Boolean           @default(false) @db.Boolean()
  isOng             Boolean           @default(false) @db.Boolean()
  createdAt         DateTime          @default(now()) @db.Timestamp()
  updatedAt         DateTime          @updatedAt @db.Timestamp()
  Pet               Pet[]
  adoptionRequest   AdoptionRequest[]
  chats             Chat[]            @relation("UserChats")
  sentMessages      Message[]         @relation("SenderMessages")
  receivedMessages  Message[]         @relation("ReceiverMessages")
}

model Pet {
  id                String            @id @unique @default(uuid())
  profilePictureUrl String?
  name              String
  species           String
  description       String
  createdAt         DateTime          @default(now()) @db.Timestamp()
  updatedAt         DateTime          @updatedAt @db.Timestamp()
  status            String?           @default("pending")
  owner             User              @relation(fields: [onwerId], references: [id])
  onwerId           String
  adoptionRequest   AdoptionRequest[]
}

model AdoptionRequest {
  id        String   @id @unique @default(uuid())
  adopter   User     @relation(fields: [adopterId], references: [id])
  adopterId String
  pet       Pet      @relation(fields: [petId], references: [id])
  petId     String
  cretaedAt DateTime @default(now()) @db.Timestamp()
  updatedAt DateTime @updatedAt @db.Timestamp()
}

model Chat {
  id       String    @id @unique @default(uuid())
  users    User[]    @relation("UserChats")
  messages Message[]
}

model Message {
  id         Int      @id @unique @default(autoincrement())
  content    String
  createdAt  DateTime @default(now())
  sender     User     @relation("SenderMessages", fields: [senderId], references: [id])
  receiver   User     @relation("ReceiverMessages", fields: [receiverId], references: [id])
  senderId   String
  receiverId String
  chat       Chat     @relation(fields: [chatId], references: [id])
  chatId     String
}
